<?hard-pagebreak?>
<section><title>xinetd and inetd</title>
	<section><title>the superdaemon</title>
		<para>Back when resources like RAM memory were limited, a super-server was devised to listen to all sockets and start the appropriate daemon only when needed. Services like <command>swat</command><indexterm><primary>swat</primary></indexterm>, <command>telnet</command><indexterm><primary>telnet</primary></indexterm> and <command>ftp</command><indexterm><primary>ftp</primary></indexterm> are typically served by such a super-server. The <command>xinetd</command><indexterm><primary>xinetd</primary></indexterm> superdaemon is more recent than <command>inetd</command><indexterm><primary>inetd</primary></indexterm>. We will discuss the configuration both daemons.</para>
		<para>Recent Linux distributions like RHEL5 and Ubuntu10.04 do not activate <command>inetd</command> or <command>xinetd</command> by default, unless an application requires it.</para>
	</section>
	<section><title>inetd or xinetd</title>
		<para>First verify whether your computer is running <command>inetd</command> or <command>xinetd</command>. This Debian 4.0 Etch is running <command>inetd</command>.</para>
		<screen>
root@barry:~# ps fax | grep inet
 3870 ?        Ss     0:00 /usr/sbin/inetd
		</screen>
		<para>This Red Hat Enterprise Linux 4 update 4 is running <command>xinetd</command>.</para>
		<screen>
[root@RHEL4b ~]# ps fax | grep inet
 3003 ?        Ss     0:00 xinetd -stayalive -pidfile /var/run/xinetd.pid
		</screen>
		<para>Both daemons have the same functionality (listening to many ports, starting other daemons when they are needed), but they have different configuration files.</para>
	</section>
	<section><title>xinetd superdaemon</title>
		<para>The <command>xinetd</command><indexterm><primary>xinetd</primary></indexterm> daemon is often called a superdaemon because it listens to a lot of incoming connections, and starts other daemons when they are needed. When a connection request is received, <command>xinetd</command> will first check TCP wrappers (/etc/hosts.allow and /etc/hosts.deny) and then give control of the connection to the other daemon. This superdaemon is configured through <command>/etc/xinetd.conf</command><indexterm><primary>/etc/xinetd.conf</primary></indexterm> and the files in the directory <command>/etc/xinetd.d</command><indexterm><primary>/etc/xinetd.d</primary></indexterm>. Let's first take a look at /etc/xinetd.conf.</para>
		<screen>
paul@RHELv8u2:~$ cat /etc/xinetd.conf 
#
# Simple configuration file for xinetd
#
# Some defaults, and include /etc/xinetd.d/
				
defaults
{
instances               = 60
log_type                = SYSLOG authpriv
log_on_success          = HOST PID
log_on_failure          = HOST
cps                     = 25 30
}
				
includedir /etc/xinetd.d
				
paul@RHELv8u2:~$ 
		</screen>
		<para>According to the settings in this file, xinetd can handle 60 client requests at once. It uses the <command>authpriv</command> facility to log the host ip-address and pid of successful daemon spawns. When a service (aka protocol linked to daemon) gets more than 25 cps (connections per second), it holds subsequent requests for 30 seconds.</para>
		<para>The directory <command>/etc/xinetd.d</command> contains more specific configuration files. Let's also take a look at one of them.</para>
		<screen>
paul@RHELv8u2:~$ ls /etc/xinetd.d
amanda     chargen-udp  echo      klogin       rexec   talk
amandaidx  cups-lpd     echo-udp  krb5-telnet  rlogin  telnet
amidxtape  daytime      eklogin   kshell       rsh     tftp
auth       daytime-udp  finger    ktalk        rsync   time
chargen    dbskkd-cdb   gssftp    ntalk        swat    time-udp
paul@RHELv8u2:~$ cat /etc/xinetd.d/swat 
# default: off
# description: SWAT is the Samba Web Admin Tool. Use swat \
#              to configure your Samba server. To use SWAT, \
#              connect to port 901 with your favorite web browser.
service swat
{
port            = 901
socket_type     = stream
wait            = no
only_from       = 127.0.0.1
user            = root
server          = /usr/sbin/swat
log_on_failure  += USERID
disable         = yes
}
paul@RHELv8u2:~$
		</screen>
		<para>The services should be listed in the <command>/etc/services</command><indexterm><primary>/etc/services</primary></indexterm> file. Port determines the service port, and must be the same as the port specified in /etc/services. The <command>socket_type</command> should be set to <command>stream</command> for tcp services (and to dgram for udp). The <command>log_on_failure +=</command> concats the userid to the log message formatted in /etc/xinetd.conf. The last setting <command>disable</command> can be set to yes or no. Setting this to <command>no</command> means the service is enabled! </para>
		<para>Check the xinetd and xinetd.conf manual pages for many more configuration options.</para>
	</section>
	<section><title>inetd superdaemon</title>
		<para>This superdaemon has only one configuration file <command>/etc/inetd.conf</command><indexterm><primary>/etc/inetd.conf</primary></indexterm>. Every protocol or daemon that it is listening for, gets one line in this file.</para>
		<screen>
root@barry:~# grep ftp /etc/inetd.conf 
tftp dgram udp wait nobody /usr/sbin/tcpd /usr/sbin/in.tftpd /boot/tftp
root@barry:~#
		</screen>
		<para>You can disable a service in inetd.conf above by putting a &#035; at the start of that line. Here an example of the disabled vmware web interface (listening on tcp port 902).</para>
		<screen>
paul@laika:~$ grep vmware /etc/inetd.conf 
#902 stream tcp nowait root /usr/sbin/vmware-authd vmware-authd
		</screen>
	</section>
</section>
