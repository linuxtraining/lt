<?hard-pagebreak?>
<section><title>Linux kernel modules</title>
<section><title>About kernel modules</title>
	<para>The Linux kernel is a monolithic kernel with loadable modules. These modules contain parts of the kernel used typically for device drivers, file systems and network protocols. Most of the time the necessary kernel modules are loaded automatically and dynamically without administrator interaction.</para>
</section>
<section><title>/lib/modules</title>
	<para>The modules are stored in the <command>/lib/modules/&#060;kernel-version&#062;</command><indexterm><primary>/lib/modules</primary></indexterm> directory. There is a separate directory for each kernel that was compiled for your system.</para>
	<screen>paul@laika:~$ ll /lib/modules/
total 12K
drwxr-xr-x 7 root root 4.0K 2008-11-10 14:32 2.6.24-16-generic
drwxr-xr-x 8 root root 4.0K 2008-12-06 15:39 2.6.24-21-generic
drwxr-xr-x 8 root root 4.0K 2008-12-05 12:58 2.6.24-22-generic</screen>
</section>
<section><title>&#060;module&#062;.ko</title>
	<para>The file containing the modules usually ends in <command>.ko</command>. This screenshot shows the location of the isdn module files.</para>
	<screen>paul@laika:~$ find /lib/modules -name isdn.ko
/lib/modules/2.6.24-21-generic/kernel/drivers/isdn/i4l/isdn.ko
/lib/modules/2.6.24-22-generic/kernel/drivers/isdn/i4l/isdn.ko
/lib/modules/2.6.24-16-generic/kernel/drivers/isdn/i4l/isdn.ko</screen>
</section>
<section><title>lsmod</title>
	<para>To see a list of currently loaded modules, use <command>lsmod</command><indexterm><primary>lsmod(1)</primary></indexterm>. You see the name of each loaded module, the size, the use count, and the names of other modules using this one.</para>
	<screen>[root@RHEL52 ~]# lsmod | head -5
Module                  Size  Used by
autofs4                24517  2 
hidp                   23105  2 
rfcomm                 42457  0 
l2cap                  29505  10 hidp,rfcomm</screen>
</section>
<?hard-pagebreak?>
<section><title>/proc/modules</title>
	<para><command>/proc/modules</command><indexterm><primary>/proc/modules</primary></indexterm> lists all modules loaded by the kernel. The output would be too long to display here, so lets <command>grep</command><indexterm><primary>grep</primary></indexterm> for the <command>vm</command> module.</para>
	<para>We see that vmmon and vmnet are both loaded. You can display the same information with <command>lsmod</command><indexterm><primary>lsmod</primary></indexterm>. Actually <command>lsmod</command> only reads and reformats the output of <command>/proc/modules</command>.</para>
	<screen>paul@laika:~$ cat /proc/modules | grep vm
vmnet 36896 13 - Live 0xffffffff88b21000 (P)
vmmon 194540 0 - Live 0xffffffff88af0000 (P)
paul@laika:~$ lsmod | grep vm
vmnet                  36896  13 
vmmon                 194540  0 
paul@laika:~$</screen>
</section>
<section><title>Module dependencies</title>
	<para>Some modules depend on others. In the following example, you can see that the nfsd module is used by exportfs, lockd and sunrpc. </para>
	<screen>paul@laika:~$ cat /proc/modules | grep nfsd
nfsd 267432 17 - Live 0xffffffff88a40000
exportfs 7808 1 nfsd, Live 0xffffffff88a3d000
lockd 73520 3 nfs,nfsd, Live 0xffffffff88a2a000
sunrpc 185032 12 nfs,nfsd,lockd, Live 0xffffffff889fb000
paul@laika:~$ lsmod | grep nfsd
nfsd                  267432  17 
exportfs                7808  1 nfsd
lockd                  73520  3 nfs,nfsd
sunrpc                185032  12 nfs,nfsd,lockd
paul@laika:~$</screen>
</section>
<?hard-pagebreak?>
<section><title>insmod</title>
	<para>Kernel modules can be manually loaded with the <command>insmod</command><indexterm><primary>insmod(1)</primary></indexterm> command. This is a very simple (and obsolete) way of loading modules. The screenshot shows <command>insmod</command> loading the fat module (for fat file system support).</para> 
	<screen>root@barry:/lib/modules/2.6.17-2-686# lsmod | grep fat
root@barry:/lib/modules/2.6.17-2-686# insmod kernel/fs/fat/fat.ko 
root@barry:/lib/modules/2.6.17-2-686# lsmod | grep fat
fat                    46588  0</screen>
	<para><command>insmod</command> is not detecting dependencies, so it fails to load the isdn module (because the isdn module depends on the slhc module).</para>
	<screen>[root@RHEL52 drivers]# pwd
/lib/modules/2.6.18-92.1.18.el5/kernel/drivers
[root@RHEL52 kernel]# insmod isdn/i4l/isdn.ko 
insmod: error inserting 'isdn/i4l/isdn.ko': -1 Unknown symbol in module</screen>
</section>
<section><title>modinfo</title>
	<para>As you can see in the screenshot of <command>modinfo</command><indexterm><primary>modinfo(1)</primary></indexterm> below, the isdn module depends in the slhc module. </para>
	<screen>[root@RHEL52 drivers]# modinfo isdn/i4l/isdn.ko | head -6
filename:       isdn/i4l/isdn.ko
license:        GPL
author:         Fritz Elfert
description:    ISDN4Linux: link layer
srcversion:     99650346E708173496F6739
depends:        slhc</screen>
</section>
<section><title>modprobe</title>
	<para>The big advantage of <command>modprobe</command><indexterm><primary>modprobe(1)</primary></indexterm> over <command>insmod</command><indexterm><primary>insmod(1)</primary></indexterm> is that modprobe will load all necessary modules, whereas insmod requires manual loading of dependencies. Another advantage is that you don't need to point to the filename with full path.</para>
	<para>This screenshot shows how modprobe loads the isdn module, automatically loading slhc in background.</para>
		<screen>[root@RHEL52 kernel]# lsmod | grep isdn
[root@RHEL52 kernel]# modprobe isdn
[root@RHEL52 kernel]# lsmod | grep isdn
isdn                  122433  0 
slhc                   10561  1 isdn
[root@RHEL52 kernel]#</screen>
</section>
<?hard-pagebreak?>
<section><title>/lib/modules/&#060;kernel&#062;/modules.dep</title>
	<para>Module dependencies are stored in <command>modules.dep</command><indexterm><primary>/lib/modules/&#060;kernel-version&#062;/modules.dep</primary></indexterm>. </para>
	<screen>[root@RHEL52 2.6.18-92.1.18.el5]# pwd
/lib/modules/2.6.18-92.1.18.el5
[root@RHEL52 2.6.18-92.1.18.el5]# head -3 modules.dep 
/lib/modules/2.6.18-92.1.18.el5/kernel/drivers/net/tokenring/3c359.ko:
/lib/modules/2.6.18-92.1.18.el5/kernel/drivers/net/pcmcia/3c574_cs.ko:
/lib/modules/2.6.18-92.1.18.el5/kernel/drivers/net/pcmcia/3c589_cs.ko:</screen>
</section>
<section><title>depmod</title>
	<para>The <command>modules.dep</command> file can be updated (recreated) with the <command>depmod</command><indexterm><primary>depmod(1)</primary></indexterm> command. In this screenshot no modules were added, so <command>depmod</command> generates the same file.</para>
	<screen>root@barry:/lib/modules/2.6.17-2-686# ls -l modules.dep 
-rw-r--r-- 1 root root 310676 2008-03-01 16:32 modules.dep
root@barry:/lib/modules/2.6.17-2-686# depmod
root@barry:/lib/modules/2.6.17-2-686# ls -l modules.dep 
-rw-r--r-- 1 root root 310676 2008-12-07 13:54 modules.dep</screen>
</section>
<section><title>rmmod</title>
	<para>Similar to insmod, the <command>rmmod</command><indexterm><primary>rmmod(1)</primary></indexterm> command is rarely used anymore.</para>
	<screen>[root@RHELv8u3 ~]# modprobe isdn
[root@RHELv8u3 ~]# rmmod slhc
ERROR: Module slhc is in use by isdn
[root@RHELv8u3 ~]# rmmod isdn
[root@RHELv8u3 ~]# rmmod slhc
[root@RHELv8u3 ~]# lsmod | grep isdn
[root@RHELv8u3 ~]#</screen>
</section>
<section><title>modprobe -r</title>
	<para>Contrary to rmmod, <command>modprobe</command><indexterm><primary>modprobe(1)</primary></indexterm> will automatically remove unneeded modules.</para>
	<screen>[root@RHELv8u3 ~]# modprobe isdn
[root@RHELv8u3 ~]# lsmod | grep isdn
isdn                  133537  0 
slhc                    7233  1 isdn
[root@RHELv8u3 ~]# modprobe -r isdn
[root@RHELv8u3 ~]# lsmod | grep isdn
[root@RHELv8u3 ~]# lsmod | grep slhc
[root@RHELv8u3 ~]#</screen>
</section>
<section><title>/etc/modprobe.conf</title>
	<para>The <command>/etc/modprobe.conf</command><indexterm><primary>/etc/modprobe.conf</primary></indexterm> file and the <command>/etc/modprobe.d</command><indexterm><primary>/etc/modprobe.d/</primary></indexterm> directory can contain aliases (used by humans) and options (for dependent modules) for modprobe.</para>
	<screen>[root@RHEL52 ~]# cat /etc/modprobe.conf
alias scsi_hostadapter mptbase
alias scsi_hostadapter1 mptspi
alias scsi_hostadapter2 ata_piix
alias eth0 pcnet32
alias eth2 pcnet32
alias eth1 pcnet32</screen>
</section>
</section>
