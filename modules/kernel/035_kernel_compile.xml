<?hard-pagebreak?>
<section><title>Compiling a kernel</title>
		<section><title>extraversion</title>
			<para>Enter into <command>/usr/src/redhat/BUILD/kernel-2.6.9/linux-2.6.9/</command> and change the <command>extraversion</command> in the Makefile.</para>
			<screen>[root@RHEL52 linux-2.6.18.i686]# pwd
/usr/src/redhat/BUILD/kernel-2.6.18/linux-2.6.18.i686
[root@RHEL52 linux-2.6.18.i686]# vi Makefile 
[root@RHEL52 linux-2.6.18.i686]# head -4 Makefile 
VERSION = 2
PATCHLEVEL = 6
SUBLEVEL = 18
EXTRAVERSION = -paul2008</screen>
		</section>
		<section><title>make mrproper</title>
			<para>Now clean up the source from any previous installs with <command>make mrproper</command><indexterm><primary>make mrproper</primary></indexterm>. If this is your first after downloading the source code, then this is not needed.</para>
			<screen>[root@RHEL52 linux-2.6.18.i686]# make mrproper
  CLEAN   scripts/basic
  CLEAN   scripts/kconfig
  CLEAN   include/config
  CLEAN   .config .config.old</screen>
		</section>
		<section><title>.config</title>
			<para>Now copy a working <command>.config</command> from /boot to our kernel directory. This file contains the configuration that was used for your current working kernel. It determines whether modules are included in compilation or not.</para>
			<screen>[root@RHEL52 linux-2.6.18.i686]# cp /boot/config-2.6.18-92.1.18.el5 .config</screen>
		</section>
		<section><title>make menuconfig</title>
			<para>Now run <command>make menuconfig</command><indexterm><primary>make menuconfig</primary></indexterm> (or the graphical <command>make xconfig</command><indexterm><primary>make xconfig</primary></indexterm>). This tool allows you to select whether to compile stuff as a module (m), as part of the kernel (*), or not at all (smaller kernel size). If you remove too much, your kernel will not work. The configuration will be stored in the hidden <command>.config</command> file.</para>
			<screen>[root@RHEL52 linux-2.6.18.i686]# make menuconfig</screen>
		</section>
		<section><title>make clean</title>
			<para>Issue a <command>make clean</command><indexterm><primary>make clean</primary></indexterm> to prepare the kernel for compile. <command>make clean</command> will remove most generated files, but keeps your kernel configuration. Running a <command>make mrproper</command> at this point would destroy the .config file that you built with <command>make menuconfig</command>.</para>
			<screen>[root@RHEL52 linux-2.6.18.i686]# make clean</screen>
		</section>
		<section><title>make bzImage</title>
			<para> And then run <command>make bzImage</command><indexterm><primary>make bzImage</primary></indexterm>, sit back and relax while the kernel compiles. You can use <command>time make bzImage</command><indexterm><primary>time(1)</primary></indexterm> to know how long it takes to compile, so next time you can go for a short walk.</para>
			<screen>[root@RHEL52 linux-2.6.18.i686]# time make bzImage
  HOSTCC  scripts/basic/fixdep
  HOSTCC  scripts/basic/docproc
  HOSTCC  scripts/kconfig/conf.o
  HOSTCC  scripts/kconfig/kxgettext.o
... </screen>
			<para>This command will end with telling you the location of the <command>bzImage</command> file (and with time info if you also specified the time command.</para>
			<screen>Kernel: arch/i386/boot/bzImage is ready  (#1)

real	13m59.573s
user	1m22.631s
sys	11m51.034s
[root@RHEL52 linux-2.6.18.i686]#</screen>
			<para>You can already copy this image to /boot with <command>cp arch/i386/boot/bzImage /boot/vmlinuz-&#060;kernel-version&#062;</command>.</para>
		</section>
		<section><title>make modules</title>
			<para>Now run <command>make modules</command><indexterm><primary>make modules</primary></indexterm>. It can take 20 to 50 minutes to compile all the modules.</para>
			<screen>[root@RHEL52 linux-2.6.18.i686]# time make modules
  CHK     include/linux/version.h
  CHK     include/linux/utsrelease.h
  CC [M]  arch/i386/kernel/msr.o
  CC [M]  arch/i386/kernel/cpuid.o
  CC [M]  arch/i386/kernel/microcode.o</screen>
		</section>
		<section><title>make modules_install</title>
			<para>To copy all the compiled modules to <command>/lib/modules</command><indexterm><primary>/lib/modules</primary></indexterm> just run <command>make modules_install</command> (takes about 20 seconds). Here's a screenshot from before the command.</para>
			<screen>[root@RHEL52 linux-2.6.18.i686]# ls -l /lib/modules/
total 20
drwxr-xr-x 6 root root 4096 Oct 15 13:09 2.6.18-92.1.13.el5
drwxr-xr-x 6 root root 4096 Nov 11 08:51 2.6.18-92.1.17.el5
drwxr-xr-x 6 root root 4096 Dec  6 07:11 2.6.18-92.1.18.el5
[root@RHEL52 linux-2.6.18.i686]# make modules_install</screen>
			<para>And here is the same directory after. Notice that <command>make modules_install</command> created a new directory for the new kernel.</para>
			<screen>[root@RHEL52 linux-2.6.18.i686]# ls -l /lib/modules/
total 24
drwxr-xr-x 6 root root 4096 Oct 15 13:09 2.6.18-92.1.13.el5
drwxr-xr-x 6 root root 4096 Nov 11 08:51 2.6.18-92.1.17.el5
drwxr-xr-x 6 root root 4096 Dec  6 07:11 2.6.18-92.1.18.el5
drwxr-xr-x 3 root root 4096 Dec  6 08:50 2.6.18-paul2008</screen>
		</section>
		<section><title>/boot</title>
			<para>We still need to copy the kernel, the System.map and our configuration file to /boot. Strictly speaking the .config file is not obligatory, but it might help you in future compilations of the kernel.</para>
			<screen>[root@RHEL52 ]# pwd
/usr/src/redhat/BUILD/kernel-2.6.18/linux-2.6.18.i686
[root@RHEL52 ]# cp System.map /boot/System.map-2.6.18-paul2008
[root@RHEL52 ]# cp .config /boot/config-2.6.18-paul2008
[root@RHEL52 ]# cp arch/i386/boot/bzImage /boot/vmlinuz-2.6.18-paul2008</screen>
		</section>
		<section><title>mkinitrd</title>
			<para>The kernel often uses an initrd file at bootup. We can use <command>mkinitrd</command><indexterm><primary>mkinitrd(1)</primary></indexterm> to generate this file. Make sure you use the correct kernel name!</para>
			<screen>[root@RHEL52 ]# pwd
/usr/src/redhat/BUILD/kernel-2.6.18/linux-2.6.18.i686
[root@RHEL52 ]# mkinitrd /boot/initrd-2.6.18-paul2008 2.6.18-paul2008</screen>
		</section>
		<section><title>bootloader</title>
			<para>Compilation is now finished, don't forget to create an additional stanza in grub or lilo.</para>
		</section>
</section>
