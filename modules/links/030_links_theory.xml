<?hard-pagebreak?>
<section><title>inodes</title>
	<section><title>inode contents</title>
		<para>An <command>inode</command> is a data structure that contains metadata about a file. When the file system stores a new file on the hard disk, it stores not only the contents (data) of the file, but also extra properties like the name of the file, the creation date, its permissions, the owner of the file, and more. All this information (except the name of the file and the contents of the file) is stored in the <command>inode</command> of the file.</para>
		<para>The <command>ls -l</command><indexterm><primary>ls</primary></indexterm> command will display some of the inode contents, as seen in this screenshot.</para>
		<screen>root@rhel53 ~# ls -ld /home/project42/
drwxr-xr-x 4 root pro42 4.0K Mar 27 14:29 /home/project42/</screen>
	</section>
	<section><title>inode table</title>
		<para>The <command>inode table</command><indexterm><primary>inode table</primary></indexterm> contains all of the <command>inodes</command> and is created when you create the file system (with <command>mkfs</command><indexterm><primary>mkfs</primary></indexterm>). You can use the <command>df -i</command><indexterm><primary>df -i</primary></indexterm> command to see how many <command>inodes</command> are used and free on mounted file systems.</para>
		<screen>root@rhel53 ~# df -i
Filesystem            Inodes   IUsed   IFree IUse% Mounted on
/dev/mapper/VolGroup00-LogVol00
                     4947968  115326 4832642    3% /
/dev/hda1              26104      45   26059    1% /boot
tmpfs                  64417       1   64416    1% /dev/shm
/dev/sda1             262144    2207  259937    1% /home/project42
/dev/sdb1              74400    5519   68881    8% /home/project33
/dev/sdb5                  0       0       0    -  /home/sales
/dev/sdb6             100744      11  100733    1% /home/research</screen>
		<para>In the <command>df -i</command> screenshot above you can see the <command>inode</command> usage for several mounted <command>file systems</command>. You don't see numbers for <command>/dev/sdb5</command> because it is a <command>fat</command> file system.</para>
	</section>
	<section><title>inode number</title>
		<para>Each <command>inode</command> has a unique number (the inode number). You can see the <command>inode</command> numbers with the <command>ls -li</command><indexterm><primary>ls(1)</primary></indexterm> command.</para>
		<screen>paul@RHELv8u4:~/test$ touch file1
paul@RHELv8u4:~/test$ touch file2
paul@RHELv8u4:~/test$ touch file3
paul@RHELv8u4:~/test$ ls -li
total 12
817266 -rw-rw-r--  1 paul paul 0 Feb  5 15:38 file1
817267 -rw-rw-r--  1 paul paul 0 Feb  5 15:38 file2
817268 -rw-rw-r--  1 paul paul 0 Feb  5 15:38 file3
paul@RHELv8u4:~/test$</screen>
		<para>These three files were created one after the other and got three different <command>inodes</command> (the first column). All the information you see with this <command>ls</command> command resides in the <command>inode</command>, except for the filename (which is contained in the directory).</para>
	</section>
	<section><title>inode and file contents</title>
		<para> Let's put some data in one of the files.</para>
		<screen>paul@RHELv8u4:~/test$ ls -li
total 16
817266 -rw-rw-r--  1 paul paul  0 Feb  5 15:38 file1
817270 -rw-rw-r--  1 paul paul 92 Feb  5 15:42 file2
817268 -rw-rw-r--  1 paul paul  0 Feb  5 15:38 file3
paul@RHELv8u4:~/test$ cat file2
It is winter now and it is very cold.
We do not like the cold, we prefer hot summer nights.
paul@RHELv8u4:~/test$</screen>
		<para>The data that is displayed by the <command>cat</command> command is not in the <command>inode</command>, but somewhere else on the disk. The <command>inode</command> contains a pointer to that data.</para>
	</section>
</section>
<section><title>about directories</title>
	<section><title>a directory is a table</title>
		<para>A <command>directory</command><indexterm><primary>directory</primary></indexterm> is a special kind of file that contains a table which maps filenames to inodes. Listing our current directory with <command>ls -ali</command><indexterm><primary>ls(1)</primary></indexterm> will display the contents of the directory file.</para>
		<screen>paul@RHELv8u4:~/test$ ls -ali
total 32
817262 drwxrwxr-x   2 paul paul 4096 Feb  5 15:42 .
800768 drwx------  16 paul paul 4096 Feb  5 15:42 ..
817266 -rw-rw-r--   1 paul paul    0 Feb  5 15:38 file1
817270 -rw-rw-r--   1 paul paul   92 Feb  5 15:42 file2
817268 -rw-rw-r--   1 paul paul    0 Feb  5 15:38 file3
paul@RHELv8u4:~/test$</screen>
	</section>
	<section><title>. and ..</title>
		<para>You can see five names, and the mapping to their five inodes. The dot <command>.</command><indexterm><primary>. (directory)</primary></indexterm> is a mapping to itself, and the dotdot <command>..</command><indexterm><primary>.. (directory)</primary></indexterm> is a mapping to the parent directory. The three other names are mappings to different inodes.</para>
	</section>
</section>
<?hard-pagebreak?>
<section><title>hard links</title>
	<section><title>creating hard links</title>
		<para>When we create a <command>hard link</command><indexterm><primary>hard link</primary></indexterm> to a file with <command>ln</command><indexterm><primary>ln(1)</primary></indexterm>, an extra entry is added in the directory. A new file name is mapped to an existing inode.</para>
		<screen>paul@RHELv8u4:~/test$ ln file2 hardlink_to_file2
paul@RHELv8u4:~/test$ ls -li
total 24
817266 -rw-rw-r--  1 paul paul  0 Feb  5 15:38 file1
817270 -rw-rw-r--  2 paul paul 92 Feb  5 15:42 file2
817268 -rw-rw-r--  1 paul paul  0 Feb  5 15:38 file3
817270 -rw-rw-r--  2 paul paul 92 Feb  5 15:42 hardlink_to_file2
paul@RHELv8u4:~/test$</screen>
		<para>Both files have the same inode, so they will always have the same permissions and the same owner. Both files will have the same content. Actually, both files are equal now, meaning you can safely remove the original file, the hardlinked file will remain. The inode contains a counter, counting the number of hard links to itself. When the counter drops to zero, then the inode is emptied.</para>
	</section>
	<section><title>finding hard links</title>
		<para>You can use the <command>find</command><indexterm><primary>find(1)</primary></indexterm> command to look for files with a certain inode. The screenshot below shows how to search for all filenames that point to <command>inode</command> 817270. Remember that an <command>inode</command><indexterm><primary>inode</primary></indexterm> number is unique to its partition.</para>
		<screen>paul@RHELv8u4:~/test$ find / -inum 817270 2> /dev/null
/home/paul/test/file2
/home/paul/test/hardlink_to_file2</screen>
	</section>
</section>
<?hard-pagebreak?>
<section><title>symbolic links</title>
	<para>Symbolic links (sometimes called <command>soft links</command><indexterm><primary>soft link</primary></indexterm>) do not link to inodes, but create a name to name mapping. Symbolic links are created with <command>ln -s</command><indexterm><primary>ln</primary></indexterm>. As you can see below, the <command>symbolic link</command><indexterm><primary>symbolic link</primary></indexterm> gets an inode of its own.</para>
	<screen>paul@RHELv8u4:~/test$ ln -s file2 symlink_to_file2
paul@RHELv8u4:~/test$ ls -li
total 32
817273 -rw-rw-r--  1 paul paul  13 Feb  5 17:06 file1
817270 -rw-rw-r--  2 paul paul 106 Feb  5 17:04 file2
817268 -rw-rw-r--  1 paul paul   0 Feb  5 15:38 file3
817270 -rw-rw-r--  2 paul paul 106 Feb  5 17:04 hardlink_to_file2
817267 lrwxrwxrwx  1 paul paul   5 Feb  5 16:55 symlink_to_file2 -> file2
paul@RHELv8u4:~/test$</screen>
	<para>Permissions on a symbolic link have no meaning, since the permissions of the target apply. Hard links are limited to their own partition (because they point to an inode), symbolic links can link anywhere (other file systems, even networked).</para>	
</section>
<section><title>removing links</title>
	<para>Links can be removed with <command>rm</command><indexterm><primary>rm(1)</primary></indexterm>.</para>
	<screen>paul@laika:~$ touch data.txt
paul@laika:~$ ln -s data.txt sl_data.txt
paul@laika:~$ ln data.txt hl_data.txt
paul@laika:~$ rm sl_data.txt 
paul@laika:~$ rm hl_data.txt</screen>	
</section>
