<?hard-pagebreak?>
<section><title>four basic resources</title>
	<para>The four basic resources to monitor are:</para>
<itemizedlist spacing='compact'>
<listitem>cpu</listitem>
<listitem>network</listitem>
<listitem>ram memory</listitem>
<listitem>storage</listitem>
</itemizedlist>
</section>
	<section><title>top</title>
		<para>To start monitoring, you can use <command>top</command><indexterm><primary>top(1)</primary></indexterm>. This tool will monitor ram memory, cpu and swap. Top will automatically refresh. Inside <command>top</command> you can use many commands, like <command>k</command> to kill processes, or <command>t</command> and <command>m</command> to toggle displaying task and memory information, or the number <command>1</command> to have one line per cpu, or one summary line for all cpu's.</para>
		<screen>top - 12:23:16 up 2 days,  4:01, 2 users, load average: 0.00, 0.00, 0.00
Tasks:  61 total,   1 running,  60 sleeping,   0 stopped,   0 zombie
Cpu(s):  0.3% us,  0.5% sy, 0.0% ni, 98.9% id, 0.2% wa, 0.0% hi, 0.0% si
Mem:    255972k total,   240952k used,    15020k free,    59024k buffers
Swap:   524280k total,      144k used,   524136k free,   112356k cached

PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND
 1 root      16   0  2816  560  480 S  0.0  0.2   0:00.91 init
 2 root      34  19     0    0    0 S  0.0  0.0   0:00.01 ksoftirqd/0
 3 root       5 -10     0    0    0 S  0.0  0.0   0:00.57 events/0
 4 root       5 -10     0    0    0 S  0.0  0.0   0:00.00 khelper
 5 root      15 -10     0    0    0 S  0.0  0.0   0:00.00 kacpid
16 root       5 -10     0    0    0 S  0.0  0.0   0:00.08 kblockd/0
26 root      15   0     0    0    0 S  0.0  0.0   0:02.86 pdflush
...  </screen>
		<para>You can customize top to display the columns of your choice, or to display only the processes that you find interesting.</para>
		<screen>[paul@RHELv8u3 ~]$ top p 3456 p 8732 p 9654</screen>
	</section>
	<section><title>free</title>
		<para>The <command>free</command><indexterm><primary>free</primary></indexterm> command is common on Linux to monitor free memory. You can use free to display information every x seconds, but the output is not ideal.</para>
		<screen>[paul@RHELv8u3 gen]$ free -om -s 10
total       used       free     shared    buffers     cached
Mem:        249        222         27          0         50        109
Swap:       511          0        511
		
total       used       free     shared    buffers     cached
Mem:        249        222         27          0         50        109
Swap:       511          0        511
		
[paul@RHELv8u3 gen]$</screen>
	</section>
<?hard-pagebreak?>
	<section><title>watch</title>
		<para>It might be more interesting to combine free with the <command>watch</command><indexterm><primary>watch(1)</primary></indexterm> program. This program can run commands with a delay, and can highlight changes (with the -d switch).</para>
		<screen>[paul@RHELv8u3 ~]$ watch -d -n 3 free -om
...
Every 3.0s: free -om                             Sat Jan 27 12:13:03 2007

total       used       free     shared    buffers     cached
Mem:           249        230         19          0         56        109
Swap:          511          0        511</screen>
	</section>
	<section><title>vmstat</title>
		<para>To monitor CPU, disk and memory statistics in one line there is <command>vmstat</command><indexterm><primary>vmstat(1)</primary></indexterm>. The screenshot below shows vmstat running every two seconds 100 times (or until the Ctrl-C). Below the r, you see the number of processes waiting for the CPU, sleeping processes go below b. Swap usage (swpd) stayed constant at 144 kilobytes, free memory dropped from 16.7MB to 12.9MB. See man vmstat for the rest.</para>
		<screen>[paul@RHELv8u3 ~]$ vmstat 2 100
procs ----------memory--------- --swap-- ---io--- --system-- ---cpu----
r  b  swpd   free   buff  cache  si  so  bi   bo   in    cs us sy id wa
0  0   144  16708  58212 111612   0   0   3    4   75    62  0  1 99  0
0  0   144  16708  58212 111612   0   0   0    0  976    22  0  0 100 0
0  0   144  16708  58212 111612   0   0   0    0  958    14  0  1 99  0
1  0   144  16528  58212 111612   0   0   0   18 1432  7417  1 32 66  0
1  0   144  16468  58212 111612   0   0   0    0 2910 20048  4 95  1  0
1  0   144  16408  58212 111612   0   0   0    0 3210 19509  4 97  0  0
1  0   144  15568  58816 111612   0   0 300 1632 2423 10189  2 62  0 36
0  1   144  13648  60324 111612   0   0 754    0 1910  2843  1 27  0 72
0  0   144  12928  60948 111612   0   0 312  418 1346  1258  0 14 57 29
0  0   144  12928  60948 111612   0   0   0    0  977    19  0  0 100 0
0  0   144  12988  60948 111612   0   0   0    0  977    15  0  0 100 0
0  0   144  12988  60948 111612   0   0   0    0  978    18  0  0 100 0
		
[paul@RHELv8u3 ~]$</screen>
	</section>
<?hard-pagebreak?>
	<section><title>iostat</title>
		<para>The <command>iostat</command><indexterm><primary>iostat(1)</primary></indexterm> tool can display disk and cpu statistics. The -d switch below makes iostat only display disk information (500 times every two seconds). The first block displays statistics since the last reboot.</para>
		<screen>[paul@RHELv8u3 ~]$ iostat -d 2 500
Linux 2.6.9-34.EL (RHELv8u3.localdomain)        01/27/2007
		
Device:         tps   Blk_read/s   Blk_wrtn/s   Blk_read   Blk_wrtn
hdc            0.00         0.01         0.00       1080          0
sda            0.52         5.07         7.78     941798    1445148
sda1           0.00         0.01         0.00        968          4
sda2           1.13         5.06         7.78     939862    1445144
dm-0           1.13         5.05         7.77     939034    1444856
dm-1           0.00         0.00         0.00        360        288
		
Device:         tps   Blk_read/s   Blk_wrtn/s   Blk_read   Blk_wrtn
hdc            0.00         0.00         0.00          0          0
sda            0.00         0.00         0.00          0          0
sda1           0.00         0.00         0.00          0          0
sda2           0.00         0.00         0.00          0          0
dm-0           0.00         0.00         0.00          0          0
dm-1           0.00         0.00         0.00          0          0
...
[paul@RHELv8u3 ~]$</screen>
		<para>You can have more statistics using <command>iostat -d -x</command>, or display only cpu statistics with <command>iostat -c</command>.</para>
		<screen>[paul@RHELv8u3 ~]$ iostat -c 5 500
Linux 2.6.9-34.EL (RHELv8u3.localdomain)        01/27/2007
		
avg-cpu:  %user   %nice    %sys %iowait   %idle
0.31    0.02    0.52    0.23   98.92
		
avg-cpu:  %user   %nice    %sys %iowait   %idle
0.62    0.00   52.16   47.23    0.00
		
avg-cpu:  %user   %nice    %sys %iowait   %idle
2.92    0.00   36.95   60.13    0.00
		
avg-cpu:  %user   %nice    %sys %iowait   %idle
0.63    0.00   36.63   62.32    0.42
		
avg-cpu:  %user   %nice    %sys %iowait   %idle
0.00    0.00    0.20    0.20   99.59
		
	[paul@RHELv8u3 ~]$</screen>
	</section>
<?hard-pagebreak?>
	<section><title>mpstat</title>
		<para>On multi-processor machines, <command>mpstat</command><indexterm><primary>mpstat(1)</primary></indexterm> can display statistics for all, or for a selected cpu.</para>
		<screen>paul@laika:~$ mpstat -P ALL
Linux 2.6.20-3-generic (laika)  02/09/2007
		
CPU %user  %nice   %sys %iowait   %irq   %soft  %steal   %idle   intr/s
all  1.77   0.03   1.37    1.03   0.02    0.39    0.00   95.40  1304.91
  0  1.73   0.02   1.47    1.93   0.04    0.77    0.00   94.04  1304.91
  1  1.81   0.03   1.27    0.13   0.00    0.00    0.00   96.76     0.00
paul@laika:~$</screen>
	</section>
	<section><title>sadc and sar</title>
		<para>The <command>sadc</command><indexterm><primary>sadc(1)</primary></indexterm> tool writes system utilization data to <command>/var/log/sa/sa??</command><indexterm><primary>/var/log/sa</primary></indexterm>, where ?? is replaced with the current day of the month. By default, cron runs the <command>sal</command><indexterm><primary>sal</primary></indexterm> script every 10 minutes, the sal script runs sadc for one second. Just before midnight every day, cron runs the <command>sa2</command><indexterm><primary>sa2(1)</primary></indexterm> script, which in turn invokes <command>sar</command><indexterm><primary>sar(1)</primary></indexterm>. The sar tool will read the daily data generated by sadc and put it in /var/log/sa/sar??. These <command>sar reports</command> contain a lot of statistics.</para>
		<para>You can also use sar to display a portion of the statistics that were gathered. Like this example for cpu statistics.</para>
		<screen>[paul@RHELv8u3 sa]$ sar -u | head
Linux 2.6.9-34.EL (RHELv8u3.localdomain)        01/27/2007
		
12:00:01 AM       CPU     %user     %nice   %system   %iowait    %idle
12:10:01 AM       all      0.48      0.01      0.60      0.04    98.87
12:20:01 AM       all      0.49      0.01      0.60      0.06    98.84
12:30:01 AM       all      0.49      0.01      0.64      0.25    98.62
12:40:02 AM       all      0.44      0.01      0.62      0.07    98.86
12:50:01 AM       all      0.42      0.01      0.60      0.10    98.87
01:00:01 AM       all      0.47      0.01      0.65      0.08    98.80
01:10:01 AM       all      0.45      0.01      0.68      0.08    98.78
[paul@RHELv8u3 sa]$</screen>
		<para>There are other useful sar options, like <command>sar -I PROC</command> to display interrupt activity per interrupt and per CPU, or <command>sar -r</command><indexterm><primary>sar(1)</primary></indexterm> for memory related statistics. Check the manual page of sar for more.</para>
	</section>	
<?hard-pagebreak?>
	<section><title>ntop</title>
		<para>The <command>ntop</command><indexterm><primary>ntop(1)</primary></indexterm> tool is not present in default Red Hat installs. Once run, it will generate a very extensive analysis of network traffic in html on http://localhost:3000 .</para>
	</section>
	<section><title>iftop</title>
		<para>The <command>iftop</command><indexterm><primary>iftop(1)</primary></indexterm> tool will display bandwidth by socket statistics for a specific network device. Not available on default Red Hat servers.</para>
		<screen>1.91Mb        3.81Mb         5.72Mb        7.63Mb   9.54Mb
--------------|-------------|--------------|-------------|--------|----
laika.local        =&#062; barry                      4.94Kb  6.65Kb  69.9Kb
                   &#060;=                            7.41Kb  16.4Kb   766Kb
laika.local        =&#062; ik-in-f19.google.com          0b   1.58Kb  14.4Kb
                   &#060;=                               0b    292b   41.0Kb
laika.local        =&#062; ik-in-f99.google.com          0b     83b   4.01Kb
                   &#060;=                               0b     83b   39.8Kb
laika.local        =&#062; ug-in-f189.google.com         0b     42b    664b
                   &#060;=                               0b     42b    406b
laika.local        =&#062; 10.0.0.138                    0b      0b    149b
                   &#060;=                               0b      0b    256b
laika.local        =&#062; 224.0.0.251                   0b      0b     86b
                   &#060;=                               0b      0b      0b
laika.local        =&#062; ik-in-f83.google.com          0b      0b     39b
                   &#060;=                               0b      0b     21b</screen>
	</section>
	<section><title>iptraf</title>
<para>Use <command>iptraf</command> for a colourful display of ip traffic over the network cards.</para>
<screen>[root@centos65 ~]# iptraf 
[root@centos65 ~]# iptraf -i eth0</screen>
	</section>
	<section><title>nload</title>
	<para><command>nload</command> displays current network traffic in the command line. Use the arrow keys to walk through devices.</para>
	<screen>Device wlan0 [192.168.1.35] (2/2):
==============================================================================================
Incoming:


                                       ||
 ..                                    ##  ||        ..     Curr: 13.20 kBit/s
 ##                                    ##  ##..      ##     Avg: 656.33 kBit/s
 ##..                                  ##||####      ##     Min: 0.00 Bit/s
 ####                                  ##########    ##..   Max: 4.44 MBit/s
.####                                ..##########  ..####   Ttl: 895.44 MByte
Outgoing:



                                                            Curr: 11.84 kBit/s
                                                            Avg: 105.90 kBit/s
                                                            Min: 0.00 Bit/s
                                                            Max: 518.48 kBit/s
 ..                                  ............    ..     Ttl: 672.49 MByte</screen>
	</section>
<?hard-pagebreak?>
	<section><title>nmon</title>
	<para>Another popular and all round tool is <command>nmon</command>.</para>
	<para><mediaobject><imageobject><imagedata fileref="images/nmon.png" format="EPS" align="center"></imagedata></imageobject></mediaobject></para>
</section>
	<section><title>htop</title>
	<para>You can use <command>htop</command> instead of top.</para>
	<para><mediaobject><imageobject><imagedata fileref="images/htop.png" format="EPS" align="center"></imagedata></imageobject></mediaobject></para>
	</section>
