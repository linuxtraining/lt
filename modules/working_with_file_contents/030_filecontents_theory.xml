<?hard-pagebreak?>
<section><title>head</title>
	<para>You can use <command>head</command><indexterm><primary>head(1)</primary></indexterm> to display the first ten lines of a file.</para>
	<screen>paul@debian10~$ <command>head /etc/passwd</command>
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/bin/sh
bin:x:2:2:bin:/bin:/bin/sh
sys:x:3:3:sys:/dev:/bin/sh
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/bin/sh
man:x:6:12:man:/var/cache/man:/bin/sh
lp:x:7:7:lp:/var/spool/lpd:/bin/sh
mail:x:8:8:mail:/var/mail:/bin/sh
news:x:9:9:news:/var/spool/news:/bin/sh
root@debian10~#</screen>
	<para>The <command>head</command> command can also display the first <command>n</command> lines of a file.</para>
	<screen>paul@debian10~$ <command>head -4 /etc/passwd</command>
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/bin/sh
bin:x:2:2:bin:/bin:/bin/sh
sys:x:3:3:sys:/dev:/bin/sh
paul@debian10~$</screen>
	<para>And <command>head</command> can also display the first <command>n bytes</command>.</para>
	<screen>paul@debian10~$ <command>head -c14 /etc/passwd</command>
root:x:0:0:roopaul@debian10~$</screen>
</section>
<section><title>tail</title>
	<para>Similar to <command>head</command>, the <command>tail</command><indexterm><primary>tail(1)</primary></indexterm> command will display the last ten lines of a file.</para>
	<screen>paul@debian10~$ <command>tail /etc/services</command>
vboxd           20012/udp
binkp           24554/tcp                       # binkp fidonet protocol
asp             27374/tcp                       # Address Search Protocol
asp             27374/udp
csync2          30865/tcp                       # cluster synchronization tool
dircproxy       57000/tcp                       # Detachable IRC Proxy
tfido           60177/tcp                       # fidonet EMSI over telnet
fido            60179/tcp                       # fidonet EMSI over TCP

# Local services
paul@debian10~$</screen>
	<para>You can give <command>tail</command> the number of lines you want to see.</para>
	<screen>paul@debian10~$ <command>tail -3 /etc/services</command>
fido            60179/tcp                       # fidonet EMSI over TCP

# Local services
paul@debian10~$</screen>
	<para>The <command>tail</command> command has other useful options, some of which we will use during this course.</para>
</section>
<section><title>cat</title>
	<para>The <command>cat</command><indexterm><primary>cat</primary></indexterm> command is one of the most universal tools, yet all it does is copy <command>standard input</command><indexterm><primary>standard input</primary></indexterm> to <command>standard output</command><indexterm><primary>standard output</primary></indexterm>. In combination with the shell this can be very powerful and diverse. Some examples will give a glimpse into the possibilities. The first example is simple, you can use cat to display a file on the screen. If the file is longer than the screen, it will scroll to the end.</para>
	<screen>paul@debian8:~$ <command>cat /etc/resolv.conf</command>
domain linux-training.be
search linux-training.be
nameserver 192.168.1.42</screen>
	<section><title>concatenate</title>
		<para><command>cat</command> is short for <command>concatenate</command>. One of the basic uses of <command>cat</command> is to concatenate files into a bigger (or complete) file.</para>
		<screen>paul@debian8:~$ <command>echo one &#062;part1</command>
paul@debian8:~$ <command>echo two &#062;part2</command>
paul@debian8:~$ <command>echo three &#062;part3</command>
paul@debian8:~$ <command>cat part1</command>
one
paul@debian8:~$ <command>cat part2</command>
two
paul@debian8:~$ <command>cat part3</command>
three
paul@debian8:~$ <command>cat part1 part2 part3</command>
one
two
three
paul@debian8:~$ <command>cat part1 part2 part3 &#062;all</command>
paul@debian8:~$ <command>cat all</command>
one
two
three
paul@debian8:~$</screen>
	</section>
	<section><title>create files</title>
		<para>You can use <command>cat</command> to create flat text files. Type the <command>cat &#062; winter.txt</command> command as shown in the screenshot below. Then type one or more lines, finishing each line with the enter key. After the last line, type and hold the Control (Ctrl) key and press d.</para>
		<screen>paul@debian8:~$ <command>cat &#062; winter.txt</command>
It is very cold today!
paul@debian8:~$ <command>cat winter.txt</command>
It is very cold today!
paul@debian8:~$</screen>
		<para>The <command>Ctrl d</command><indexterm><primary>Ctrl d</primary></indexterm> key combination will send an <command>EOF</command><indexterm><primary>EOF</primary></indexterm> (End of File) to the running process ending the <command>cat</command> command.</para>
	</section>
<?hard-pagebreak?>
	<section><title>custom end marker</title>
		<para>You can choose an end marker for <command>cat</command> with <command>&#060;&#060;</command> as is shown in this screenshot. This construction is called a <command>here directive</command><indexterm><primary>here directive</primary></indexterm> and will end the <command>cat</command> command.</para>
		<screen>paul@debian8:~$ <command>cat &#062; hot.txt &#060;&#060;stop</command>
&#062; It is hot today!
&#062; Yes it is summer.
&#062; stop
paul@debian8:~$ <command>cat hot.txt</command>
It is hot today!
Yes it is summer.
paul@debian8:~$</screen>
	</section>
	<section><title>copy files</title>
		<para>In the third example you will see that cat can be used to copy files. We will explain in detail what happens here in the bash shell chapter.</para>
		<screen>paul@debian8:~$ <command>cat winter.txt</command>
It is very cold today!
paul@debian8:~$ <command>cat winter.txt &#062; cold.txt</command>
paul@debian8:~$ <command>cat cold.txt</command> 
It is very cold today!
paul@debian8:~$</screen>		
	</section>
</section>
<section><title>tac</title>
	<para>Just one example will show you the purpose of <command>tac</command><indexterm><primary>tac</primary></indexterm> (cat backwards).</para>
	<screen>paul@debian8:~$ <command>cat count</command>
one
two
three
four
paul@debian8:~$ <command>tac count</command> 
four
three
two
one</screen>
</section>
<?hard-pagebreak?>
<section><title>more and less</title>
	<para>The <command>more</command><indexterm><primary>more(1)</primary></indexterm> command is useful for displaying files that take up more than one screen. More will allow you to see the contents of the file page by page. Use the space bar to see the next page, or <command>q</command> to quit. Some people prefer the <command>less</command><indexterm><primary>less(1)</primary></indexterm> command to <command>more</command>.</para>
</section>
<section><title>strings</title>
	<para>With the <command>strings</command><indexterm><primary>strings(1)</primary></indexterm> command you can display readable ascii strings found in (binary) files. This example locates the <command>ls</command> binary then displays readable strings in the binary file (output is truncated).</para>
	<screen>
paul@laika:~$ which ls
/bin/ls
paul@laika:~$ strings /bin/ls
/lib/ld-linux.so.2
librt.so.1
__gmon_start__
_Jv_RegisterClasses
clock_gettime
libacl.so.1
...
	</screen>
</section>
