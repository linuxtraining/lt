<?hard-pagebreak?>
<section><title>introduction to apache</title>
	<section><title>installing on Debian</title>
		<para>This screenshot shows that there is no <command>apache</command> server installed, nor does the <command>/var/www</command> directory exist.</para>
		<screen>root@debian7:~# <command>ls -l /var/www</command>
ls: cannot access /var/www: No such file or directory
root@debian7:~# <command>dpkg -l | grep apache</command></screen>
		<para>To install <command>apache</command> on Debian:</para>
		<screen>root@debian7:~# <command>aptitude install apache2</command>
The following NEW packages will be installed:
  apache2 apache2-mpm-worker{a} apache2-utils{a} apache2.2-bin{a} apache2.2-com\
mon{a} libapr1{a} libaprutil1{a} libaprutil1-dbd-sqlite3{a} libaprutil1-ldap{a}\
 ssl-cert{a} 
0 packages upgraded, 10 newly installed, 0 to remove and 0 not upgraded.
Need to get 1,487 kB of archives. After unpacking 5,673 kB will be used.
Do you want to continue? [Y/n/?]</screen>
		<para>After installation, the same two commands as above will yield a different result:</para>
		<screen>root@debian7:~# <command>ls -l /var/www</command>
total 4
-rw-r--r-- 1 root root 177 Apr 29 11:55 index.html
root@debian7:~# <command>dpkg -l | grep apache | tr -s ' '</command>
ii apache2 2.2.22-13+deb7u1 amd64 Apache HTTP Server metapackage
ii apache2-mpm-worker 2.2.22-13+deb7u1 amd64 Apache HTTP Server - high speed th\
readed model
ii apache2-utils 2.2.22-13+deb7u1 amd64 utility programs for webservers
ii apache2.2-bin 2.2.22-13+deb7u1 amd64 Apache HTTP Server common binary files
ii apache2.2-common 2.2.22-13+deb7u1 amd64 Apache HTTP Server common files</screen>
	</section>
<?hard-pagebreak?>
	<section><title>installing on RHEL/CentOS</title>
		<para>Note that Red Hat derived distributions use <command>httpd</command> as package and process name instead of <command>apache</command>.</para>
		<para>To verify whether <command>apache</command> is installed in CentOS/RHEL:</para>
		<screen>[root@centos65 ~]# <command>rpm -q httpd</command>
package httpd is not installed
[root@centos65 ~]# <command>ls -l /var/www</command>
ls: cannot access /var/www: No such file or directory</screen>
		<para>To install apache on CentOS:</para>
		<screen>[root@centos65 ~]# <command>yum install httpd</command></screen>
		<para>After running the <command>yum install httpd</command> command, the Centos 6.5 server has apache installed and the <command>/var/www</command> directory exists.</para>
		<screen>[root@centos65 ~]# <command>rpm -q httpd</command>
httpd-2.2.15-30.el6.centos.x86_64
[root@centos65 ~]# <command>ls -l /var/www</command>
total 16
drwxr-xr-x. 2 root root 4096 Apr  3 23:57 cgi-bin
drwxr-xr-x. 3 root root 4096 May  6 13:08 error
drwxr-xr-x. 2 root root 4096 Apr  3 23:57 html
drwxr-xr-x. 3 root root 4096 May  6 13:08 icons
[root@centos65 ~]#</screen>
	</section>
<?hard-pagebreak?>
	<section><title>running apache on Debian</title>
		<para>This is how you start <command>apache2</command><indexterm><primary>apache2</primary></indexterm> on Debian.</para>
		<screen>root@debian7:~# <command>service apache2 status</command>
Apache2 is NOT running.
root@debian7:~# <command>service apache2 start</command>
Starting web server: apache2apache2: Could not reliably determine the server's \
fully qualified domain name, using 127.0.1.1 for ServerName
.
</screen>
		<para>To verify, run the <command>service apache2 status</command> command again or use <command>ps</command>.</para>
		<screen>root@debian7:~# <command>service apache2 status</command>
Apache2 is running (pid 3680).
root@debian7:~# <command>ps -C apache2</command>
  PID TTY          TIME CMD
 3680 ?        00:00:00 apache2
 3683 ?        00:00:00 apache2
 3684 ?        00:00:00 apache2
 3685 ?        00:00:00 apache2
root@debian7:~#</screen>
		<para>Or use <command>wget</command> and <command>file</command> to verify that your web server serves an html document.</para>
		<screen>root@debian7:~# <command>wget 127.0.0.1</command>
--2014-05-06 13:27:02--  http://127.0.0.1/
Connecting to 127.0.0.1:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 177 [text/html]
Saving to: `index.html'

100%[==================================================>] 177    --.-K/s   in 0s

2014-05-06 13:27:02 (15.8 MB/s) - `index.html' saved [177/177]

root@debian7:~# <command>file index.html</command>
index.html: HTML document, ASCII text
root@debian7:~#</screen>
		<para>Or verify that apache is running by opening a web browser, and browse to the ip-address of your server. An Apache test page should be shown.</para>
		<para>You can do the following to quickly avoid the 'could not reliably determine the fqdn' message when restarting apache.</para>
		<screen>root@debian7:~# <command>echo ServerName Debian7 >> /etc/apache2/apache2.conf</command>
root@debian7:~# <command>service apache2 restart</command>
Restarting web server: apache2 ... waiting .
root@debian7:~#</screen>
</section>
<?hard-pagebreak?>
<section><title>running apache on CentOS</title>
	<para>Starting the <command>httpd</command><indexterm><primary>httpd</primary></indexterm> on RHEL/CentOS is done with the <command>service</command> command.</para>
	<screen>[root@centos65 ~]# <command>service httpd status</command>
httpd is stopped
[root@centos65 ~]# <command>service httpd start</command>
Starting httpd: httpd: Could not reliably determine the server's fully qualifie\
d domain name, using 127.0.0.1 for ServerName
                                                           [  OK  ]
[root@centos65 ~]#</screen>
	<para>To verify that <command>apache</command> is running, use <command>ps</command> or issue the <command>service httpd status</command> command again.</para>
	<screen>[root@centos65 ~]# <command>service httpd status</command>
httpd (pid  2410) is running...
[root@centos65 ~]# <command>ps -C httpd</command>
  PID TTY          TIME CMD
 2410 ?        00:00:00 httpd
 2412 ?        00:00:00 httpd
 2413 ?        00:00:00 httpd
 2414 ?        00:00:00 httpd
 2415 ?        00:00:00 httpd
 2416 ?        00:00:00 httpd
 2417 ?        00:00:00 httpd
 2418 ?        00:00:00 httpd
 2419 ?        00:00:00 httpd
[root@centos65 ~]#</screen>
	<para>To prevent the 'Could not reliably determine the fqdn' message, issue the following command.</para>
	<screen>[root@centos65 ~]# <command>echo ServerName Centos65 >> /etc/httpd/conf/httpd.conf</command>
[root@centos65 ~]# <command>service httpd restart</command>
Stopping httpd:                                            [  OK  ]
Starting httpd:                                            [  OK  ]
[root@centos65 ~]#</screen>
</section>
<?hard-pagebreak?>
<section><title>index file on CentOS</title>
	<para>CentOS does not provide a standard index.html or index.php file. A simple <command>wget</command> gives an error.</para>
	<screen>[root@centos65 ~]# <command>wget 127.0.0.1</command>
--2014-05-06 15:10:22--  http://127.0.0.1/
Connecting to 127.0.0.1:80... connected.
HTTP request sent, awaiting response... 403 Forbidden
2014-05-06 15:10:22 ERROR 403: Forbidden.</screen>
	<para>Instead when visiting the ip-address of your server in a web browser you get a <command>noindex.html</command> page. You can verify this using <command>wget</command>.</para>
	<screen>[root@centos65 ~]# <command>wget http://127.0.0.1/error/noindex.html</command>
--2014-05-06 15:16:05--  http://127.0.0.1/error/noindex.html
Connecting to 127.0.0.1:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 5039 (4.9K) [text/html]
Saving to: “noindex.html”

100%[=============================================>] 5,039       --.-K/s   in 0s

2014-05-06 15:16:05 (289 MB/s) - “noindex.html” saved [5039/5039]

[root@centos65 ~]# <command>file noindex.html</command>
noindex.html: HTML document text
[root@centos65 ~]#</screen>
	<para>Any custom <command>index.html</command> file in <command>/var/www/html</command> will immediately serve as an index for this web server.</para>
	<screen>[root@centos65 ~]# <command>echo 'Welcome to my website' > /var/www/html/index.html</command>
[root@centos65 ~]# <command>wget http://127.0.0.1</command>
--2014-05-06 15:19:16--  http://127.0.0.1/
Connecting to 127.0.0.1:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 22 [text/html]
Saving to: “index.html”

100%[=============================================>] 22          --.-K/s   in 0s

2014-05-06 15:19:16 (1.95 MB/s) - “index.html” saved [22/22]

[root@centos65 ~]# <command>cat index.html</command>
Welcome to my website</screen>
</section>
<?hard-pagebreak?>
<section><title>default website</title>
	<para>Changing the default website of a freshly installed apache web server is easy. All you need to do is create (or change) an index.html file in the DocumentRoot directory.</para>
	<para>To locate the DocumentRoot directory on Debian:</para>
	<screen>root@debian7:~# <command>grep DocumentRoot /etc/apache2/sites-available/default</command>
        DocumentRoot /var/www</screen>
	<para>This means that <command>/var/www/index.html</command> is the default web site.</para>
	<screen>root@debian7:~# <command>cat /var/www/index.html</command>
&#060;html>&#060;body>&#060;h1>It works!&#060;/h1>
&#060;p>This is the default web page for this server.&#060;/p>
&#060;p>The web server software is running but no content has been added, yet.&#060;/p>
&#060;/body>&#060;/html>
root@debian7:~#</screen>
	<para>This screenshot shows how to locate the <command>DocumentRoot</command> directory on RHEL/CentOS.</para>
	<screen>[root@centos65 ~]# <command>grep ^DocumentRoot /etc/httpd/conf/httpd.conf</command>
DocumentRoot "/var/www/html"</screen>
	<para>RHEL/CentOS have no default web page (only the noindex.html error page mentioned before). But an <command>index.html</command> file created in <command>/var/www/html/</command> will automatically be used as default page.</para>
<screen>[root@centos65 ~]# <command>echo '&#060;html>&#060;head>&#060;title>Default website&#060;/title>&#060;/head>&#060;body\
>&#060;p>A new web page&#060;/p>&#060;/body>&#060;/html>' > /var/www/html/index.html</command>
[root@centos65 ~]# <command>cat /var/www/html/index.html</command>
&#060;html>&#060;head>&#060;title>Default website&#060;/title>&#060;/head>&#060;body>&#060;p>A new web page&#060;/p>&#060;/b\
ody>&#060;/html>
[root@centos65 ~]#</screen>
</section>
<?hard-pagebreak?>
	<section><title>apache configuration</title>
		<para>There are many similarities, but also a couple of differences when configuring <command>apache</command> on Debian or on CentOS. Both Linux families will get their own chapters with examples.</para>
		<para>All configuration on RHEL/CentOS is done in <command>/etc/httpd</command><indexterm><primary>/etc/httpd</primary></indexterm>.</para>
		<screen>[root@centos65 ~]# ls -l /etc/httpd/
total 8
drwxr-xr-x. 2 root root 4096 May  6 13:08 conf
drwxr-xr-x. 2 root root 4096 May  6 13:08 conf.d
lrwxrwxrwx. 1 root root   19 May  6 13:08 logs -> ../../var/log/httpd
lrwxrwxrwx. 1 root root   29 May  6 13:08 modules -> ../../usr/lib64/httpd/modu\
les
lrwxrwxrwx. 1 root root   19 May  6 13:08 run -> ../../var/run/httpd
[root@centos65 ~]#</screen>
		<para>Debian (and ubuntu/mint/...) use <command>/etc/apache2</command><indexterm><primary>/etc/apache2</primary></indexterm>.</para>
		<screen>root@debian7:~# ls -l /etc/apache2/
total 72
-rw-r--r-- 1 root root  9659 May  6 14:23 apache2.conf
drwxr-xr-x 2 root root  4096 May  6 13:19 conf.d
-rw-r--r-- 1 root root  1465 Jan 31 18:35 envvars
-rw-r--r-- 1 root root 31063 Jul 20  2013 magic
drwxr-xr-x 2 root root  4096 May  6 13:19 mods-available
drwxr-xr-x 2 root root  4096 May  6 13:19 mods-enabled
-rw-r--r-- 1 root root   750 Jan 26 12:13 ports.conf
drwxr-xr-x 2 root root  4096 May  6 13:19 sites-available
drwxr-xr-x 2 root root  4096 May  6 13:19 sites-enabled
root@debian7:~#</screen>
	</section>
</section>
<?hard-pagebreak?>
<section><title>port virtual hosts on Debian</title>
<section><title>default virtual host</title>
	<para>Debian has a virtualhost configuration file for its default website in <command>/etc/apache2/sites-available/default</command>.</para>
	<screen>root@debian7:~# <command>head -2 /etc/apache2/sites-available/default</command>
&#060;VirtualHost *:80>
        ServerAdmin webmaster@localhost</screen>
</section>
<section><title>three extra virtual hosts</title>
	<para>In this scenario we create three additional websites for three customers that share a clubhouse and want to jointly hire you. They are a model train club named <command>Choo Choo</command>, a chess club named <command>Chess Club 42</command> and a hackerspace named <command>hunter2</command>.</para>
	<para>One way to put three websites on one web server, is to put each website on a different port. This screenshot shows three newly created <command>virtual hosts</command>, one for each customer.</para>
	<screen>root@debian7:~# <command>vi /etc/apache2/sites-available/choochoo</command>
root@debian7:~# <command>cat /etc/apache2/sites-available/choochoo</command>
&#060;VirtualHost *:7000>
        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/choochoo
&#060;/VirtualHost>
root@debian7:~# <command>vi /etc/apache2/sites-available/chessclub42</command>
root@debian7:~# <command>cat /etc/apache2/sites-available/chessclub42</command>
&#060;VirtualHost *:8000>
        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/chessclub42
&#060;/VirtualHost>
root@debian7:~# <command>vi /etc/apache2/sites-available/hunter2</command>
root@debian7:~# <command>cat /etc/apache2/sites-available/hunter2</command>
&#060;VirtualHost *:9000>
        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/hunter2
&#060;/VirtualHost></screen>
	<para>Notice the different port numbers 7000, 8000 and 9000. Notice also that we specified a unique <command>DocumentRoot</command> for each website.</para>
</section>
<section><title>three extra ports</title>
	<para>We need to enable these three ports on apache in the <command>ports.conf</command> file.</para>
	<screen>root@debian7:~# <command>vi /etc/apache2/ports.conf</command>
root@debian7:~# <command>grep ^Listen /etc/apache2/ports.conf</command>
Listen 80
Listen 7000
Listen 8000
Listen 9000</screen>
</section>
<?hard-pagebreak?>
<section><title>three extra websites</title>
	<para>Next we need to create three <command>DocumentRoot</command> directories.</para>
	<screen>root@debian7:~# mkdir /var/www/choochoo
root@debian7:~# mkdir /var/www/chessclub42
root@debian7:~# mkdir /var/www/hunter2</screen>
	<para>And we have to put some really simple website in those directories.</para>
	<screen>root@debian7:~# echo 'Choo Choo model train Choo Choo' > /var/www/choochoo/inde\
x.html
root@debian7:~# echo 'Welcome to chess club 42' > /var/www/chessclub42/index.ht\
ml
root@debian7:~# echo 'HaCkInG iS fUn At HuNtEr2' > /var/www/hunter2/index.html</screen>
</section>
<section><title>enabling extra websites</title>
	<para>The last step is to enable the websites with the <command>a2ensite</command> command. This command will create links in <command>sites-enabled</command>.</para>
	<para>The links are not there yet...</para>
	<screen>root@debian7:~# <command>cd /etc/apache2/</command> 
root@debian7:/etc/apache2# <command>ls sites-available/</command> 
chessclub42  choochoo  default  default-ssl  hunter2
root@debian7:/etc/apache2# <command>ls sites-enabled/</command> 
000-default</screen>
	<para>So we run the <command>a2ensite</command> command for all websites.</para>
	<screen>root@debian7:/etc/apache2# <command>a2ensite choochoo</command> 
Enabling site choochoo.
To activate the new configuration, you need to run:
  service apache2 reload
root@debian7:/etc/apache2# <command>a2ensite chessclub42</command> 
Enabling site chessclub42.
To activate the new configuration, you need to run:
  service apache2 reload
root@debian7:/etc/apache2# <command>a2ensite hunter2</command> 
Enabling site hunter2.
To activate the new configuration, you need to run:
  service apache2 reload</screen>
	<para>The links are created, so we can tell <command>apache</command>.</para>
	<screen>root@debian7:/etc/apache2# <command>ls sites-enabled/</command> 
000-default  chessclub42  choochoo  hunter2
root@debian7:/etc/apache2# <command>service apache2 reload</command> 
Reloading web server config: apache2.
root@debian7:/etc/apache2#</screen>
</section>
<?hard-pagebreak?>
<section><title>testing the three websites</title>
	<para>Testing the model train club named <command>Choo Choo</command> on port 7000.</para>
	<screen>root@debian7:/etc/apache2# <command>wget 127.0.0.1:7000</command> 
--2014-05-06 21:16:03--  http://127.0.0.1:7000/
Connecting to 127.0.0.1:7000... connected.
HTTP request sent, awaiting response... 200 OK
Length: 32 [text/html]
Saving to: `index.html'

100%[============================================>] 32          --.-K/s   in 0s

2014-05-06 21:16:03 (2.92 MB/s) - `index.html' saved [32/32]

root@debian7:/etc/apache2# <command>cat index.html</command> 
Choo Choo model train Choo Choo</screen>
	<para>Testing the chess club named <command>Chess Club 42</command> on port 8000.</para>
	<screen>root@debian7:/etc/apache2# <command>wget 127.0.0.1:8000</command> 
--2014-05-06 21:16:20--  http://127.0.0.1:8000/
Connecting to 127.0.0.1:8000... connected.
HTTP request sent, awaiting response... 200 OK
Length: 25 [text/html]
Saving to: `index.html.1'

100%[===========================================>] 25          --.-K/s   in 0s

2014-05-06 21:16:20 (2.16 MB/s) - `index.html.1' saved [25/25]

root@debian7:/etc/apache2# <command>cat index.html.1</command> 
Welcome to chess club 42</screen>
	<para>Testing the hacker club named <command>hunter2</command> on port 9000.</para>
	<screen>root@debian7:/etc/apache2# <command>wget 127.0.0.1:9000</command> 
--2014-05-06 21:16:30--  http://127.0.0.1:9000/
Connecting to 127.0.0.1:9000... connected.
HTTP request sent, awaiting response... 200 OK
Length: 26 [text/html]
Saving to: `index.html.2'

100%[===========================================>] 26          --.-K/s   in 0s

2014-05-06 21:16:30 (2.01 MB/s) - `index.html.2' saved [26/26]

root@debian7:/etc/apache2# <command>cat index.html.2</command> 
HaCkInG iS fUn At HuNtEr2</screen>
	<para>Cleaning up the temporary files.</para>
	<screen>root@debian7:/etc/apache2# <command>rm index.html index.html.1 index.html.2</command> </screen>
	<para>Try testing from another computer using the ip-address of your server.</para>
</section>
</section>
<?hard-pagebreak?>
<section><title>port virtual hosts on CentOS</title>
<section><title>default virtual host</title>
	<para>Unlike Debian, CentOS has no virtualHost configuration file for its default website. Instead the default configuration will throw
	a standard error page when no index file can be found in the default location (/var/www/html).</para>
</section>
<section><title>three extra virtual hosts</title>
	<para>In this scenario we create three additional websites for three customers that share a clubhouse and want to jointly hire you. They are a model train club named <command>Choo Choo</command>, a chess club named <command>Chess Club 42</command> and a hackerspace named <command>hunter2</command>.</para>

	<para>One way to put three websites on one web server, is to put each website on a different port. This screenshot shows three newly created <command>virtual hosts</command>, one for each customer.</para>
	<screen>[root@CentOS65 ~]# <command>vi /etc/httpd/conf.d/choochoo.conf</command>
[root@CentOS65 ~]# <command>cat /etc/httpd/conf.d/choochoo.conf</command>
&#060;VirtualHost *:7000>
        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/html/choochoo
&#060;/VirtualHost>
[root@CentOS65 ~]# <command>vi /etc/httpd/conf.d/chessclub42.conf</command>
[root@CentOS65 ~]# <command>cat /etc/httpd/conf.d/chessclub42.conf</command>
&#060;VirtualHost *:8000>
        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/html/chessclub42
&#060;/VirtualHost>
[root@CentOS65 ~]# <command>vi /etc/httpd/conf.d/hunter2.conf</command>
[root@CentOS65 ~]# <command>cat /etc/httpd/conf.d/hunter2.conf</command>
&#060;VirtualHost *:9000>
        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/html/hunter2
&#060;/VirtualHost></screen>
	<para>Notice the different port numbers 7000, 8000 and 9000. Notice also that we specified a unique <command>DocumentRoot</command> for each website.</para>
</section>
<section><title>three extra ports</title>
	<para>We need to enable these three ports on apache in the <command>httpd.conf</command> file.</para>
	<screen>[root@CentOS65 ~]# <command>vi /etc/httpd/conf/httpd.conf</command>
root@debian7:~# <command>grep ^Listen /etc/httpd/conf/httpd.conf</command>
Listen 80
Listen 7000
Listen 8000
Listen 9000</screen>
	<para>If we try to restart our server, we will notice the following error:</para>
	<screen>[root@CentOS65 ~]# <command>service httpd restart</command>
Stopping httpd:                                            [  OK  ]
Starting httpd: 
         (13)Permission denied: make_sock: could not bind to address 0.0.0.0:7000
no listening sockets available, shutting down
                                                           [FAILED]</screen>
	<para>This is due to SELinux reserving ports 7000 and 8000 for other uses. We need to tell SELinux we want to use these ports for http traffic</para>
	<screen>[root@CentOS65 ~]# <command>semanage port -m -t http_port_t -p tcp 7000</command>
[root@CentOS65 ~]# <command>semanage port -m -t http_port_t -p tcp 8000</command>
[root@CentOS65 ~]# <command>service httpd restart</command>
Stopping httpd:                                            [  OK  ]
Starting httpd:                                            [  OK  ]</screen>
</section>
<section><title>three extra websites</title>
	<para>Next we need to create three <command>DocumentRoot</command> directories.</para>
	<screen>[root@CentOS65 ~]# mkdir /var/www/html/choochoo
[root@CentOS65 ~]# mkdir /var/www/html/chessclub42
[root@CentOS65 ~]# mkdir /var/www/html/hunter2</screen>
	<para>And we have to put some really simple website in those directories.</para>
	<screen>[root@CentOS65 ~]#:~# echo 'Choo Choo model train Choo Choo' > /var/www/html/cho\
ochoo/index.html
[root@CentOS65 ~]# echo 'Welcome to chess club 42' > /var/www/html/chessclub42/i\
ndex.html
root@debian7:~# echo 'HaCkInG iS fUn At HuNtEr2' > /var/www/html/hunter2/index.h\
tml</screen>
</section>
<section><title>enabling extra websites</title>
	<para>The only way to enable or disable configurations in RHEL/CentOS is by renaming or moving the configuration files. Any file in
	/etc/httpd/conf.d ending on .conf will be loaded by Apache. To disable a site we can either rename the file or move it to another directory.</para>

	<para>The files are created, so we can tell <command>apache</command>.</para>
	<screen>[root@CentOS65 ~]# <command>ls /etc/httpd/conf.d/</command>
chessclub42.conf  choochoo.conf  hunter2.conf  README  welcome.conf
[root@CentOS65 ~]# <command>service httpd reload</command>
Reloading httpd: </screen>
</section>
<?hard-pagebreak?>
<section><title>testing the three websites</title>
	<para>Testing the model train club named <command>Choo Choo</command> on port 7000.</para>
	<screen>[root@CentOS65 ~]# <command>wget 127.0.0.1:7000</command>
--2014-05-11 11:59:36--  http://127.0.0.1:7000/
Connecting to 127.0.0.1:7000... connected.
HTTP request sent, awaiting response... 200 OK
Length: 32 [text/html]
Saving to: `index.html'

100%[===========================================>] 32          --.-K/s   in 0s      

2014-05-11 11:59:36 (4.47 MB/s) - `index.html' saved [32/32]

[root@CentOS65 ~]# cat <command>index.html</command> 
Choo Choo model train Choo Choo</screen>
	<para>Testing the chess club named <command>Chess Club 42</command> on port 8000.</para>
	<screen>[root@CentOS65 ~]# <command>wget 127.0.0.1:8000</command>
--2014-05-11 12:01:30--  http://127.0.0.1:8000/
Connecting to 127.0.0.1:8000... connected.
HTTP request sent, awaiting response... 200 OK
Length: 25 [text/html]
Saving to: `index.html.1'

100%[===========================================>] 25          --.-K/s   in 0s

2014-05-11 12:01:30 (4.25 MB/s) - `index.html.1' saved [25/25]

root@debian7:/etc/apache2# <command>cat index.html.1</command> 
Welcome to chess club 42</screen>
	<para>Testing the hacker club named <command>hunter2</command> on port 9000.</para>
	<screen>[root@CentOS65 ~]# <command>wget 127.0.0.1:9000</command> 
--2014-05-11 12:02:37--  http://127.0.0.1:9000/
Connecting to 127.0.0.1:9000... connected.
HTTP request sent, awaiting response... 200 OK
Length: 26 [text/html]
Saving to: `index.html.2'

100%[===========================================>] 26          --.-K/s   in 0s

2014-05-11 12:02:37 (4.49 MB/s) - `index.html.2' saved [26/26]

root@debian7:/etc/apache2# <command>cat index.html.2</command> 
HaCkInG iS fUn At HuNtEr2</screen>
	<para>Cleaning up the temporary files.</para>
	<screen>[root@CentOS65 ~]# <command>rm index.html index.html.1 index.html.2</command> </screen>
	<para>If we attempt to access the site from another machine however, we will not be able to view the website yet. The firewall is 
	blocking incoming connections. We need to open these incoming ports first</para>
	<screen>[root@CentOS65 ~]# iptables -I INPUT -p tcp --dport 80 -j ACCEPT
[root@CentOS65 ~]# iptables -I INPUT -p tcp --dport 7000 -j ACCEPT
[root@CentOS65 ~]# iptables -I INPUT -p tcp --dport 8000 -j ACCEPT
[root@CentOS65 ~]# iptables -I INPUT -p tcp --dport 9000 -j ACCEPT
</screen>
	<para>And if we want these rules to remain active after a reboot, we need to save them</para>
	<screen>[root@CentOS65 ~]# service iptables save
iptables: Saving firewall rules to /etc/sysconfig/iptables:[  OK  ]</screen>
</section>
</section>
<?hard-pagebreak?>
<section><title>named virtual hosts on Debian</title>
<section><title>named virtual hosts</title>
	<para>The chess club and the model train club find the port numbers too hard to remember. They would prefere to have their website accessible by name.</para>
	<para>We continue work on the same server that has three websites on three ports. We need to make sure those websites are accesible using the names <command>choochoo.local</command>, <command>chessclub42.local</command> and <command>hunter2.local</command>.</para>
	<para>We start by creating three new virtualhosts.</para>
	<screen>root@debian7:/etc/apache2/sites-available# <command>vi choochoo.local</command> 
root@debian7:/etc/apache2/sites-available# <command>vi chessclub42.local</command> 
root@debian7:/etc/apache2/sites-available# <command>vi hunter2.local</command> 
root@debian7:/etc/apache2/sites-available# <command>cat choochoo.local</command> 
&#060;VirtualHost *:80>
        ServerAdmin webmaster@localhost
        ServerName choochoo.local
        DocumentRoot /var/www/choochoo
&#060;/VirtualHost>
root@debian7:/etc/apache2/sites-available# <command>cat chessclub42.local</command> 
&#060;VirtualHost *:80>
        ServerAdmin webmaster@localhost
        ServerName chessclub42.local
        DocumentRoot /var/www/chessclub42
&#060;/VirtualHost>
root@debian7:/etc/apache2/sites-available# <command>cat hunter2.local</command> 
&#060;VirtualHost *:80>
        ServerAdmin webmaster@localhost
        ServerName hunter2.local
        DocumentRoot /var/www/hunter2
&#060;/VirtualHost>
root@debian7:/etc/apache2/sites-available#</screen>
	<para>Notice that they all listen on <command>port 80</command> and have an extra <command>ServerName</command> directive.</para>
</section>
<section><title>name resolution</title>
	<para>We need some way to resolve names. This can be done with DNS, which is discussed in another chapter. For this demo it is also possible to quickly add the three names to the <command>/etc/hosts</command> file.</para>
	<screen>root@debian7:/etc/apache2/sites-available# <command>grep ^192 /etc/hosts</command> 
192.168.42.50 choochoo.local
192.168.42.50 chessclub42.local
192.168.42.50 hunter2.local</screen>
	<para>Note that you may have another ip address...</para>
</section>
<?hard-pagebreak?>
<section><title>enabling virtual hosts</title>
	<para>Next we enable them with <command>a2ensite</command>.</para>
	<screen>root@debian7:/etc/apache2/sites-available# <command>a2ensite choochoo.local</command> 
Enabling site choochoo.local.
To activate the new configuration, you need to run:
  service apache2 reload
root@debian7:/etc/apache2/sites-available# <command>a2ensite chessclub42.local</command> 
Enabling site chessclub42.local.
To activate the new configuration, you need to run:
  service apache2 reload
root@debian7:/etc/apache2/sites-available# <command>a2ensite hunter2.local</command> 
Enabling site hunter2.local.
To activate the new configuration, you need to run:
  service apache2 reload</screen>
</section>
<section><title>reload and verify</title>
	<para>After a <command>service apache2 reload</command> the websites should be available by name.</para>
	<screen>root@debian7:/etc/apache2/sites-available# <command>!se</command> 
service apache2 reload
Reloading web server config: apache2.
root@debian7:/etc/apache2/sites-available# <command>wget chessclub42.local</command> 
--2014-05-06 21:37:13--  http://chessclub42.local/
Resolving chessclub42.local (chessclub42.local)... 192.168.42.50
Connecting to chessclub42.local (chessclub42.local)|192.168.42.50|:80... connec\
ted.
HTTP request sent, awaiting response... 200 OK
Length: 25 [text/html]
Saving to: `index.html'

100%[=============================================>] 25          --.-K/s   in 0s

2014-05-06 21:37:13 (2.06 MB/s) - `index.html' saved [25/25]

root@debian7:/etc/apache2/sites-available# <command>cat index.html</command> 
Welcome to chess club 42</screen>
</section>
</section>
<?hard-pagebreak?>
<section><title>password protected website on Debian</title>
	<para>You can secure files and directories in your website with a <command>.htaccess</command> file that refers to a <command>.htpasswd</command> file. The <command>htpasswd</command><indexterm><primary>htpasswd(1)</primary></indexterm> command can create a <command>.htpasswd</command><indexterm><primary>.htpasswd</primary></indexterm> file that contains a userid and an (encrypted) password.</para>
	<para>This screenshot creates a user and password for the hacker named <command>cliff</command> and uses the <command>-c</command> flag to create the <command>.htpasswd</command> file.</para>
	<screen>root@debian7:~# <command>htpasswd -c /var/www/.htpasswd cliff</command> 
New password:
Re-type new password:
Adding password for user cliff
root@debian7:~# <command>cat /var/www/.htpasswd</command>
cliff:$apr1$vujll0KL$./SZ4w9q0swhX93pQ0PVp.</screen>
	<para>Hacker <command>rob</command> also wants access, this screenshot shows how to add a second user and password to <command>.htpasswd</command>.</para>
	<screen>root@debian7:~# <command>htpasswd /var/www/.htpasswd rob</command> 
New password:
Re-type new password:
Adding password for user rob
root@debian7:~# <command>cat /var/www/.htpasswd</command> 
cliff:$apr1$vujll0KL$./SZ4w9q0swhX93pQ0PVp.
rob:$apr1$HNln1FFt$nRlpF0H.IW11/1DRq4lQo0</screen>
	<para>Both Cliff and Rob chose the same password (hunter2), but that is not visible in the <command>.htpasswd</command> file because of the different salts.</para>
	<para>Next we need to create a <command>.htaccess</command> file in the <command>DocumentRoot</command> of the website we want to protect. This screenshot shows an example.</para>
	<screen>root@debian7:~# <command>cd /var/www/hunter2/</command> 
root@debian7:/var/www/hunter2# <command>cat .htaccess</command> 
AuthUserFile /var/www/.htpasswd
AuthName "Members only!"
AuthType Basic
require valid-user</screen>
	<para>Note that we are protecting the website on <command>port 9000</command> that we created earlier.</para>
	<para>And because we put the website for the Hackerspace named hunter2 in a subdirectory of the default website, we will need to adjust the <command>AllowOvveride</command> parameter in <command>/etc/apache2/sites-available/default</command> as this screenshot shows (with line numbers on Debian7, your may vary).</para>
	<screen>9         &#060;Directory /var/www/>
10                 Options Indexes FollowSymLinks MultiViews
11                 <command>AllowOverride Authconfig</command>
12                 Order allow,deny
13                 allow from all
14         &#060;/Directory</screen> 
	<para>Now restart the apache2 server and test that it works!</para>
</section>
<?hard-pagebreak?>
	<section><title>troubleshooting apache on Debian</title>
	<para>When apache restarts, it will verify the syntax of files in <command>/etc/apache2</command> and it will tell you the name of the faulty file, the line number and an explanation of the error.</para>
	<screen>root@debian7:~# <command>service apache2 restart</command>
apache2: Syntax error on line 268 of /etc/apache2/apache2.conf: Syntax error o\
n line 1 of /etc/apache2/sites-enabled/chessclub42: /etc/apache2/sites-enabled\
/chessclub42:4: &#060;VirtualHost> was not closed.\n/etc/apache2/sites-enabled/ches\
sclub42:1: &#060;VirtualHost> was not closed.
Action 'configtest' failed.
The Apache error log may have more information.
 failed!</screen>
	<para>Below you see the problem... a missing / before on line 4.</para>
	<screen>root@debian7:~# <command>cat /etc/apache2/sites-available/chessclub42</command>
&#060;VirtualHost *:8000>
        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/chessclub42
&#060;VirtualHost></screen>
	<para>Let us force another error by renaming the directory of one of our websites:</para>
	<screen>root@debian7:~# <command>mv /var/www/choochoo/ /var/www/chooshoo</command>
root@debian7:~# <command>!ser</command>
service apache2 restart
Restarting web server: apache2Warning: DocumentRoot [/var/www/choochoo] does no\
t exist
Warning: DocumentRoot [/var/www/choochoo] does not exist
 ... waiting Warning: DocumentRoot [/var/www/choochoo] does not exist
Warning: DocumentRoot [/var/www/choochoo] does not exist
.</screen>
	<para>As you can see, apache will tell you exactly what is wrong.</para>
	<para>You can also troubleshoot by connecting to the website via a browser and then checking the apache log files in <command>/var/log/apache</command>.</para>
</section>
<?hard-pagebreak?>
	<section><title>virtual hosts example</title>
		<para>Below is a sample virtual host configuration. This virtual hosts overrules the default Apache <command>ErrorDocument</command> directive.</para>
		<screen>
&#060;VirtualHost 83.217.76.245:80&#062;
ServerName cobbaut.be
ServerAlias www.cobbaut.be
DocumentRoot /home/paul/public_html
ErrorLog /home/paul/logs/error_log
CustomLog /home/paul/logs/access_log common
ScriptAlias /cgi-bin/ /home/paul/cgi-bin/
&#060;Directory /home/paul/public_html&#062;
	Options Indexes IncludesNOEXEC FollowSymLinks
	allow from all
&#060;/Directory&#062;
ErrorDocument 404 http://www.cobbaut.be/cobbaut.php
&#060;/VirtualHost&#062;
		</screen>
	</section>
	<section><title>aliases and redirects</title>
		<para>Apache supports aliases for directories, like this example shows.</para>
		<screen>Alias /paul/ "/home/paul/public_html/"</screen>
		<para>Similarly, content can be redirected to another website or web server.</para>
		<screen>Redirect permanent /foo http://www.foo.com/bar</screen>
	</section>
	<section><title>more on .htaccess</title>
		<para>You can do much more with <command>.htaccess</command><indexterm><primary>.htaccess</primary></indexterm>. One example is to use .htaccess to prevent people from certain domains to access your website. Like in this case, where a number of referer spammers are blocked from the website.</para>
		<screen>
		paul@lounge:~/cobbaut.be$ cat .htaccess 
		# Options +FollowSymlinks
		RewriteEngine On
		RewriteCond &#037;{HTTP_REFERER} ^http://(www\.)?buy-adipex.fw.nu.*$ [OR]
		RewriteCond &#037;{HTTP_REFERER} ^http://(www\.)?buy-levitra.asso.ws.*$ [NC,OR]
		RewriteCond &#037;{HTTP_REFERER} ^http://(www\.)?buy-tramadol.fw.nu.*$ [NC,OR]
		RewriteCond &#037;{HTTP_REFERER} ^http://(www\.)?buy-viagra.lookin.at.*$ [NC,OR]
		...
		RewriteCond &#037;{HTTP_REFERER} ^http://(www\.)?www.healthinsurancehelp.net.*$ [NC]
		RewriteRule .* - [F,L]
		paul@lounge:~/cobbaut.be$ 
	</screen>
	</section>
	<section><title>traffic</title>
		<para>Apache keeps a log of all visitors. The <command>webalizer</command><indexterm><primary>webalizer</primary></indexterm> is often used to parse this log into nice html statistics.</para>
	</section>
