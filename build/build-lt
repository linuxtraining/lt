#!/bin/sh

# Nightly build script.
# This script generates all the books for the download page on the website.
# (c) 2010 Serge van Ginderachter

# This script is to be linked as git update hook, in the book repository
# (not in the build submodule!)
# then just do a nightly git pull in $GIT_DIR from CRON
if [ -z "$GIT_DIR" ]
then	echo "Don't run this script from the command line." >&2
        echo " (if you want, you could supply GIT_DIR then run" >&2
        echo "  $0 " >&2
        exit 1
fi

# We work on a checkout of the repository. So it's not a bare repository.
cd $GIT_DIR/../

# environment
wwwbooksdir=
outputdir=
www=
MAKEOPTS=
V=
. build/build-lt.conf || exit 1

if [ -z "$wwwbooksdir" -o -z "$outputdir" -o -z "$www" ] 
then	echo "Please configure lt-build.conf accordingly." >&2
	exit 1
fi

# fresh start function
clean () {
        ./make.sh $MAKEOPTS clean
        rm -rf $outputdir
}
clean


## Let's start
mkdir $V -p $www

# LinuxFun
./make.sh $MAKEOPTS html fundamentals
mkdir $V -p $www/html/
rsync -a $V $outputdir/html/ $www/html/fun/ --delete

./make.sh $MAKEOPTS build fundamentals
./make.sh $MAKEOPTS clean
mv $V $outputdir/*.pdf $www/LinuxFun.pdf
                  
# LinuxAdm
./make.sh $MAKEOPTS build sysadmin
./make.sh $MAKEOPTS clean
mv $V $outputdir/*.pdf $www/LinuxAdm.pdf

# LinuxSrv
./make.sh $MAKEOPTS build advanced
./make.sh $MAKEOPTS clean
mv $V $outputdir/*.pdf $www/LinuxSrv.pdf

# LinuxTraining
./make.sh $MAKEOPTS build complete
./make.sh $MAKEOPTS clean
mv $V $outputdir/*.pdf $www/LinuxTraining.pdf

# cleanup
clean

rsync $V -a $www/ $wwwbooksdir/ --delete || exit 1

exit 0
